[
	{
		"commands_raw": "this is a single line test.",
		"gnode_name": "plain_text_test_single_line",
		"id": 0,
		"name": "plain_text_test_single_line",
		"position": [
			100,
			60
		]
	},
	{
		"commands_raw": "this is a multi line text.\nWhere the consequent lines are put parsed together.",
		"gnode_name": "plain_text_test_multi_line",
		"id": 1,
		"name": "plain_text_test_multi_line",
		"position": [
			100,
			180
		]
	},
	{
		"commands_raw": "starting test.\n$if test_variable {\n    variable is true.\n}\n$else {\n    variable is not true.\n}\npost conditional text pick up.",
		"gnode_name": "base_conditional_display",
		"id": 2,
		"name": "base_conditional_display",
		"position": [
			100,
			260
		]
	},
	{
		"commands_raw": "this is base transition test.\n-> base_transition_target",
		"gnode_name": "plain_transition_test",
		"id": 3,
		"name": "plain_transition_test",
		"position": [
			100,
			420
		]
	},
	{
		"commands_raw": "transition successful.",
		"gnode_name": "base_transition_target",
		"id": 4,
		"name": "base_transition_target",
		"position": [
			386.667877197266,
			8.31634426116943
		]
	},
	{
		"commands_raw": "conditional transition test.\n$if test_variable {\n    -> true_transition_target\n} $else {\n    -> else_transition_target\n}",
		"gnode_name": "conditional_transition_test",
		"id": 5,
		"name": "conditional_transition_test",
		"position": [
			80,
			-120
		]
	},
	{
		"commands_raw": "true target reached.",
		"gnode_name": "true_transition_target",
		"id": 6,
		"name": "true_transition_target",
		"position": [
			400,
			-200
		]
	},
	{
		"commands_raw": "else target reached.",
		"gnode_name": "else_transition_target",
		"id": 7,
		"name": "else_transition_target",
		"position": [
			400,
			-113.290000915527
		]
	},
	{
		"commands_raw": "choice is selected.\n?> choice a -> choice_a_transition_target\n?> choice b -> choice_b_transition_target",
		"gnode_name": "choice_based_transition",
		"id": 8,
		"name": "choice_based_transition",
		"position": [
			100,
			880
		]
	},
	{
		"commands_raw": "choice A transition target.",
		"gnode_name": "choice_a_transition_target",
		"id": 9,
		"name": "choice_a_transition_target",
		"position": [
			400,
			-420
		]
	},
	{
		"commands_raw": "choice B transition target.",
		"gnode_name": "choice_b_transition_target",
		"id": 10,
		"name": "choice_b_transition_target",
		"position": [
			400,
			-300
		]
	},
	{
		"commands_raw": "assert only this node as visited.\n\n?> two nodes visit -> start_two_nodes_flow",
		"gnode_name": "node_visit_test",
		"id": 11,
		"name": "node_visit_test",
		"position": [
			120,
			-600
		]
	},
	{
		"commands_raw": "immediately transition without pause.\n\n-> two_nodes_second_node",
		"gnode_name": "start_two_nodes_flow",
		"id": 12,
		"name": "start_two_nodes_flow",
		"position": [
			320,
			-600
		]
	},
	{
		"commands_raw": "",
		"gnode_name": "two_nodes_second_node",
		"id": 13,
		"name": "two_nodes_second_node",
		"position": [
			580,
			-600
		]
	},
	{
		"commands_raw": "on the next node single custom signal triggers.\n?> start test -> one_signal",
		"gnode_name": "custom_signal_test",
		"id": 14,
		"name": "custom_signal_test",
		"position": [
			100,
			1040
		]
	},
	{
		"commands_raw": "triggering\nsignal(test_signal_1,param1)\n?> two signal -> two_signal",
		"gnode_name": "one_signal",
		"id": 15,
		"name": "one_signal",
		"position": [
			360,
			-740
		]
	},
	{
		"commands_raw": "signal(signal_1,1)\nand then another signal triggers signal(signal_2,2)\nthe end",
		"gnode_name": "two_signal",
		"id": 16,
		"name": "two_signal",
		"position": [
			540,
			-720
		]
	},
	{
		"commands_raw": "some text\n$if some_var {\n -> long way\n}\n$else {\n -> issue11_end\n}",
		"gnode_name": "issue11_end_of_dialogue_detection",
		"id": 17,
		"name": "issue11_end_of_dialogue_detection",
		"position": [
			80,
			760
		]
	},
	{
		"commands_raw": "long way trigger\n?> one prompt -> issue11_end",
		"gnode_name": "long way",
		"id": 18,
		"name": "long way",
		"position": [
			380,
			520
		]
	},
	{
		"commands_raw": "reached the end.",
		"gnode_name": "issue11_end",
		"id": 19,
		"name": "issue11_end",
		"position": [
			560,
			440
		]
	},
	{
		"commands_raw": "This is a variable display text.\nInject the following ${test_variable}.\nyipee!",
		"gnode_name": "test_variable_injection_in_text",
		"id": 20,
		"name": "test_variable_injection_in_text",
		"position": [
			80,
			1180
		]
	},
	{
		"commands_raw": "Inject the following ${test_nested_variable[\"property1\"]}.",
		"gnode_name": "test_nested_variable_injection_in_text",
		"id": 21,
		"name": "test_nested_variable_injection_in_text",
		"position": [
			80,
			1320
		]
	},
	{
		"commands_raw": "about to test nested variable in conditional.\n\n$if some_variable[\"nested_component\"] {\n    -> true_transition_target\n}\n$else {\n    -> else_transition_target\n}",
		"gnode_name": "test_nested_variable_conditional",
		"id": 22,
		"name": "test_nested_variable_conditional",
		"position": [
			40,
			-340
		]
	},
	{
		"commands_raw": "about to test nested variable in conditional.\n\n$if (some_variable[\"nested_component\"] && second_variable) || some_variable[\"nested_component_2\"][\"even_deeper_component\"]{\n    -> true_transition_target\n}\n$else {\n    -> else_transition_target\n}",
		"gnode_name": "test_complex_nested_variable_conditional",
		"id": 23,
		"name": "test_complex_nested_variable_conditional",
		"position": [
			40,
			-440
		]
	},
	{
		"commands_raw": "starting test...\n\n$if variable[\"key1\"] == 414 && variable[\"key2\"] == true && variable[\"key3\"] == 3.14159265358979 && variable[\"key4\"] == \"hello\" && true && variable_string == \"anotherone\" {\n    -> true_transition_target\n}\n$else {\n    -> else_transition_target\n}",
		"gnode_name": "issue18_second_pass_expression_replacement_test",
		"id": 24,
		"name": "issue18_second_pass_expression_replacement_test",
		"position": [
			80,
			1460
		]
	},
	{
		"commands_raw": "dead end choice upcoming\n?> option 1 {}\n?> option 2 {}",
		"gnode_name": "test_deadend_choice",
		"id": 25,
		"name": "test_deadend_choice",
		"position": [
			80,
			1600
		]
	}
]